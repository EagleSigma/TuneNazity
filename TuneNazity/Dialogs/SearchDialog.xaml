<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
	xmlns:Model="clr-namespace:TuneNazity.Model"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	x:Class="TuneNazity.SearchDialog"
	x:Name="Window"
	Title="SearchDialog"
	Width="520" Height="450" WindowStyle="None" WindowStartupLocation="CenterScreen" Foreground="{x:Null}" Background="{x:Null}" AllowsTransparency="True" ResizeMode="NoResize" MaxHeight="500" MinHeight="450" MinWidth="520" MaxWidth="520">
	
    <Window.Resources>

        
        <LinearGradientBrush x:Key="GreenChrome" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#FF9FA29D" Offset="1"/>
			<GradientStop Color="White"/>
			<GradientStop Color="#FFFBFFF8" Offset="0.836"/>
			<GradientStop Color="#FEC1C7BD" Offset="0.573"/>
			<GradientStop Color="#FF3F443C" Offset="0.922"/>
			<GradientStop Color="#FE4A5147" Offset="0.082"/>
			<GradientStop Color="#FEE3EDDE" Offset="0.138"/>
		</LinearGradientBrush>

		
        <!-- TREE VIEW CONTENT START-->

    	<Style BasedOn="{x:Null}" TargetType="{x:Type Button}" x:Key="Button_Theme">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<ControlTemplate.Resources>
    						<Storyboard x:Key="over">
    							<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="title" Storyboard.TargetProperty="(FrameworkElement.Margin)">
    								<SplineThicknessKeyFrame KeyTime="00:00:00" Value="0"/>
    								<SplineThicknessKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.5000000" Value="0,-60,0,0"/>
    								<SplineThicknessKeyFrame KeyTime="00:00:00.7000000" Value="0,-55,0,0"/>
    							</ThicknessAnimationUsingKeyFrames>
    							<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="titleOver" Storyboard.TargetProperty="(FrameworkElement.Margin)">
    								<SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,-55"/>
    								<SplineThicknessKeyFrame KeyTime="00:00:00.5000000" Value="0,0,0,5" KeySpline="0.5,0,0.5,1"/>
    								<SplineThicknessKeyFrame KeyTime="00:00:00.7000000" Value="0"/>
    							</ThicknessAnimationUsingKeyFrames>
    						</Storyboard>
    						<Storyboard x:Key="overBack">
    							<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="title" Storyboard.TargetProperty="(FrameworkElement.Margin)">
    								<SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,-55,0,0"/>
    								<SplineThicknessKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.5000000" Value="0,5,0,0"/>
    								<SplineThicknessKeyFrame KeyTime="00:00:00.7000000" Value="0"/>
    							</ThicknessAnimationUsingKeyFrames>
    							<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="titleOver" Storyboard.TargetProperty="(FrameworkElement.Margin)">
    								<SplineThicknessKeyFrame KeyTime="00:00:00" Value="0"/>
    								<SplineThicknessKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.5000000" Value="0,0,0,-60"/>
    								<SplineThicknessKeyFrame KeyTime="00:00:00.7000000" Value="0,0,0,-55"/>
    							</ThicknessAnimationUsingKeyFrames>
    						</Storyboard>
    						<Storyboard x:Key="press">
    							<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgPress" Storyboard.TargetProperty="(UIElement.Visibility)">
    								<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
    								<DiscreteObjectKeyFrame KeyTime="00:00:00.7000000" Value="{x:Static Visibility.Visible}"/>
    							</ObjectAnimationUsingKeyFrames>
    							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgPress" Storyboard.TargetProperty="(UIElement.Opacity)">
    								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
    								<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1"/>
    								<SplineDoubleKeyFrame KeyTime="00:00:00.7000000" Value="0"/>
    							</DoubleAnimationUsingKeyFrames>
    						</Storyboard>
    						<Storyboard x:Key="overline">
    							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bg" Storyboard.TargetProperty="(Shape.Stroke).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
    								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1.061"/>
    								<SplineDoubleKeyFrame KeyTime="00:00:01.1000000" Value="1.024"/>
    								<SplineDoubleKeyFrame KeyTime="00:00:02.5000000" Value="1.024"/>
    							</DoubleAnimationUsingKeyFrames>
    							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bg" Storyboard.TargetProperty="(Shape.Stroke).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
    								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
    								<SplineDoubleKeyFrame KeyTime="00:00:01.1000000" Value="0.001"/>
    								<SplineDoubleKeyFrame KeyTime="00:00:02.5000000" Value="0.001"/>
    							</DoubleAnimationUsingKeyFrames>
    						</Storyboard>
    					</ControlTemplate.Resources>
    					<Grid x:Name="grid" ClipToBounds="True">
    						<Rectangle RadiusX="2" RadiusY="2" x:Name="bg" Fill="{TemplateBinding Background}">
    							<Rectangle.Stroke>
    								<LinearGradientBrush EndPoint="1.04,0.5" StartPoint="-0.01,0.5">
    									<LinearGradientBrush.RelativeTransform>
    										<TransformGroup>
    											<ScaleTransform CenterX="0.5" CenterY="0.5"/>
    											<SkewTransform CenterX="0.5" CenterY="0.5"/>
    											<RotateTransform CenterX="0.5" CenterY="0.5"/>
    											<TranslateTransform/>
    										</TransformGroup>
    									</LinearGradientBrush.RelativeTransform>
    									<GradientStop Color="#FF595959" Offset="0"/>
    									<GradientStop Color="White" Offset="0.7"/>
    									<GradientStop Color="#FF303030" Offset="1"/>
    								</LinearGradientBrush>
    							</Rectangle.Stroke>
    						</Rectangle>
    						<Rectangle Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="bgBling" Margin="2,2,2,20">
    							<Rectangle.Fill>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#00FFFFFF" Offset="1"/>
    									<GradientStop Color="#B2FFFFFF" Offset="0"/>
    								</LinearGradientBrush>
    							</Rectangle.Fill>
    						</Rectangle>
    						<TextBlock x:Name="title" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Content}"/>
    						<Rectangle RadiusX="8" RadiusY="8" x:Name="bgPress" StrokeThickness="2" Visibility="Hidden" RenderTransformOrigin="0.5,0.5" Fill="{x:Null}" d:CopyToken="803fb051-7927-4812-be8c-c89ef9381dd4">
    							<Rectangle.RenderTransform>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform/>
    								</TransformGroup>
    							</Rectangle.RenderTransform>
    							<Rectangle.Stroke>
    								<LinearGradientBrush EndPoint="0.967,1.042" StartPoint="0.076,-0.042">
    									<LinearGradientBrush.RelativeTransform>
    										<TransformGroup>
    											<ScaleTransform CenterX="0.5" CenterY="0.5"/>
    											<SkewTransform CenterX="0.5" CenterY="0.5"/>
    											<RotateTransform CenterX="0.5" CenterY="0.5"/>
    											<TranslateTransform X="-0.458"/>
    										</TransformGroup>
    									</LinearGradientBrush.RelativeTransform>
    									<GradientStop Offset="1" Color="White"/>
    									<GradientStop Color="White"/>
    								</LinearGradientBrush>
    							</Rectangle.Stroke>
    						</Rectangle>
    						<TextBlock x:Name="titleOver" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Content}" Margin="0,0,0,-60" FontWeight="Bold" FontSize="14.667" FontFamily="Arial"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="True">
    							<Trigger.ExitActions>
    								<BeginStoryboard x:Name="overBack_BeginStoryboard" Storyboard="{StaticResource overBack}"/>
    								<StopStoryboard BeginStoryboardName="overline_BeginStoryboard"/>
    							</Trigger.ExitActions>
    							<Trigger.EnterActions>
    								<BeginStoryboard Storyboard="{StaticResource over}"/>
    								<BeginStoryboard x:Name="overline_BeginStoryboard" Storyboard="{StaticResource overline}"/>
    							</Trigger.EnterActions>
    						</Trigger>
    						<Trigger Property="IsPressed" Value="True">
    							<Trigger.EnterActions>
    								<BeginStoryboard x:Name="press_BeginStoryboard" Storyboard="{StaticResource press}"/>
    							</Trigger.EnterActions>
    							<Setter Property="Stroke" TargetName="bgPress">
    								<Setter.Value>
    									<LinearGradientBrush EndPoint="0.967,1.042" StartPoint="0.076,-0.042">
    										<LinearGradientBrush.RelativeTransform>
    											<TransformGroup>
    												<ScaleTransform CenterX="0.5" CenterY="0.5"/>
    												<SkewTransform CenterX="0.5" CenterY="0.5"/>
    												<RotateTransform CenterX="0.5" CenterY="0.5"/>
    												<TranslateTransform X="-0.458"/>
    											</TransformGroup>
    										</LinearGradientBrush.RelativeTransform>
    										<GradientStop Offset="0"/>
    										<GradientStop Offset="1"/>
    									</LinearGradientBrush>
    								</Setter.Value>
    							</Setter>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="False"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Background">
    			<Setter.Value>
    				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
    					<GradientStop Color="#FFF0F0F0" Offset="0.149"/>
    					<GradientStop Color="#FF9F9F9F" Offset="1"/>
    					<GradientStop Color="#FFA8A8A8" Offset="0"/>
    					<GradientStop Color="White" Offset="0.335"/>
    				</LinearGradientBrush>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<LinearGradientBrush x:Key="Chrome" EndPoint="0.996,0.5" StartPoint="0.036,0.5">
    		<GradientStop Color="#FF727272" Offset="0"/>
    		<GradientStop Color="White" Offset="0.495"/>
    		<GradientStop Color="#FF727272" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="DarkerBackGround" EndPoint="0.5,1" StartPoint="0.5,0">
    		<GradientStop Color="#7FA2A2A2" Offset="0"/>
    		<GradientStop Color="#7F807E7E" Offset="1"/>
    		<GradientStop Color="#FF1D1C1C" Offset="0.165"/>
    		<GradientStop Color="#FF424242" Offset="0.836"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="iTuneGReen" EndPoint="0.5,1" StartPoint="0.5,0">
    		<GradientStop Color="#FFCBCBC7" Offset="0"/>
    		<GradientStop Color="#FFEAF0CD" Offset="1"/>
    		<GradientStop Color="#FFDCDECB" Offset="0.685"/>
    		<GradientStop Color="#FFD1D3C8" Offset="0.409"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="NewGreenBack" EndPoint="0.5,1" StartPoint="0.5,0">
    		<GradientStop Color="#FFF0F5C4" Offset="0"/>
    		<GradientStop Color="#FFEAF0CD" Offset="1"/>
    		<GradientStop Color="#FFD3DA9D" Offset="0.685"/>
    		<GradientStop Color="#FFD2DE9E" Offset="0.409"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="DarkChrome" EndPoint="0.996,0.5" StartPoint="0.036,0.5">
    		<GradientStop Color="#FF727272" Offset="0"/>
    		<GradientStop Color="#FFBEB9B9" Offset="0.495"/>
    		<GradientStop Color="#FF727272" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="Dialog-Dark" EndPoint="0.5,1" StartPoint="0.5,0">
    		<GradientStop Color="#7FA2A2A2" Offset="0"/>
    		<GradientStop Color="#7F807E7E" Offset="1"/>
    		<GradientStop Color="#FF1D1C1C" Offset="0.03"/>
    		<GradientStop Color="#FF424242" Offset="0.978"/>
    		<GradientStop Color="#7F2F2F2F" Offset="0.513"/>
    	</LinearGradientBrush>
    	<Storyboard x:Key="Expand-1Line"/>

        <!--  TREE VIEW CONTENT END-->

	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
			<BeginStoryboard Storyboard="{StaticResource Expand-1Line}"/>
		</EventTrigger>
	</Window.Triggers>

    <Grid x:Name="LayoutRoot" DataContext="{Binding Source={StaticResource Locator}}">
    	<Border CornerRadius="10">
    		<Border.Background>
    			<ImageBrush ImageSource="/TuneNazity;component/Images/hot-black-background-Small.png" Stretch="None"/>
    		</Border.Background>
        
    		<Border BorderThickness="3" CornerRadius="10" BorderBrush="{DynamicResource GreenChrome}">
    			<Border.Background>
    				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    					<GradientStop Color="#7FA2A2A2" Offset="0"/>
    					<GradientStop Color="#7F807E7E" Offset="1"/>
    					<GradientStop Color="#FF2C2C2C" Offset="0.03"/>
    					<GradientStop Color="#FF424242" Offset="0.978"/>
    					<GradientStop Color="#3F2F2F2F" Offset="0.513"/>
    					<GradientStop Color="#3F2C2C2C" Offset="0.06"/>
    					<GradientStop Color="#4C303030" Offset="0.961"/>
    				</LinearGradientBrush>
    			</Border.Background>
    			<i:Interaction.Triggers>
    				<i:EventTrigger EventName="MouseLeftButtonDown">
    					<Command:EventToCommand Command="{Binding Main.MoveSearchWindow, Mode=OneWay}"/>
    				</i:EventTrigger>
    			</i:Interaction.Triggers>
    			<Grid Margin="7">
    				<Border HorizontalAlignment="Left" Height="206" Margin="9,101,0,0" VerticalAlignment="Top" Width="481" BorderThickness="3,4" CornerRadius="3" BorderBrush="{DynamicResource GreenChrome}" RenderTransformOrigin="0.5,0.5"
                    >
    					<Border.Background>
    						<ImageBrush ImageSource="/TuneNazity;component/Images/CoolBackGround.png" Stretch="None">
    							<ImageBrush.RelativeTransform>
    								<TransformGroup>
    									<ScaleTransform ScaleY="1" ScaleX="1"/>
    									<SkewTransform AngleY="0" AngleX="0"/>
    									<RotateTransform Angle="0"/>
    									<TranslateTransform/>
    								</TransformGroup>
    							</ImageBrush.RelativeTransform>
    						</ImageBrush>
    					</Border.Background>


    					<TreeView x:Name="myTree"  BorderBrush="{x:Null}" Background="{x:Null}" Foreground="{x:Null}" Margin="0,-3,0,0" DataContext="{Binding MainStatic, Mode=OneWay}">
    						<TreeView.Resources>
                                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Width" Value="30" />
                                    <Setter Property="Height" Value="30" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Width="30"
                                                    Height="30"
                                                    Background="Transparent">
                                                    <Border Width="30"
                                                        Height="30"
                                                        SnapsToDevicePixels="true"
                                                        Background="Transparent"
                                                        BorderThickness="1">
                                                        <Grid>
                                                            <Image
                                                                x:Name="expandIcon"    
                                                                Width="30"
                                                                Height="30"
                                                                Stretch="UniformToFill"
                                                                Source="/Images/go-right.png"
                                                            />
                                                        </Grid>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Source"
                                                                TargetName="expandIcon"
                                                                Value="/Images/go-BottomG.png" 
                                                                />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="HeaderTemplate">
    									<Setter.Value>
    										<DataTemplate DataType="ContentPresenter">
    											<StackPanel Orientation="Horizontal" >

                                                    <Image 
    													x:Name="img" 
    													Width="30" Height="30" 
    													Stretch="Fill" 
                                                    />
                                                    
                                                    <TextBlock x:Name="myCurrentSelection" FontSize="16" FontFamily="Helvetica LT Std Cond"  TextOptions.TextFormattingMode="Display" Text="{Binding}" VerticalAlignment="Center" Margin="5,0"   />

                                                </StackPanel>

    											<DataTemplate.Triggers>
                                                    
                                                    <DataTrigger Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" 
    													Value="Root"
                                                    >
                                                        <Setter 
    														TargetName="img" 
    														Property="Source" 
    														Value="/Images/Monitor.png" 
                                                          />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" 
    													Value="Drive"
                                                    >
                                                        <Setter 
    														TargetName="img" 
    														Property="Source" 
    														Value="/Images/HardDrive3.png" 
                                                          />
                                                    </DataTrigger>


                                                    <DataTrigger Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" 
    													Value="False"
                                                    >
    													<Setter 
    														TargetName="img" 
    														Property="Source" 
    														Value="/Images/folder.png" 
                                                          />
    												</DataTrigger>

                                                    <DataTrigger Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" 
    													Value="Song"
                                                    >
                                                        <Setter 
    														TargetName="img" 
    														Property="Source" 
    														Value="/Images/NoteMusic.png" 
                                                          />
                                                    </DataTrigger>
                                                    
                                                    <DataTrigger Binding="{Binding (Model:TreeViewItemProps.IsFolderSelected), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" 
    													Value="Partial"
                                                    >
                                                        <Setter 
    														TargetName="img" 
    														Property="Source" 
    														Value="/Images/Folder-Partial.png" 
                                                          />
                                                    </DataTrigger>


                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsFolderSelected), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="True" />
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                       
                                                        <Setter Property="Source"
                                                                TargetName="img"
                                                                Value="/Images/Folder-Selected.png" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsFolderSelected), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="True" />
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="Drive" />
                                                        </MultiDataTrigger.Conditions>

                                                        <Setter Property="Source"
                                                                TargetName="img"
                                                                Value="/Images/HardDrive3-Selected.png" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsFolderSelected), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="Partial" />
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="Drive" />
                                                        </MultiDataTrigger.Conditions>

                                                        <Setter Property="Source"
                                                                TargetName="img"
                                                                Value="/Images/HardDrive3-Partial.png" />
                                                    </MultiDataTrigger>


                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsFolderSelected), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="False" />
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="Drive" />
                                                        </MultiDataTrigger.Conditions>

                                                        <Setter Property="Source"
                                                                TargetName="img"
                                                                Value="/Images/HardDrive3.png" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsFolderSelected), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="True" />
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="Root" />
                                                        </MultiDataTrigger.Conditions>

                                                        <Setter Property="Source"
                                                                TargetName="img"
                                                                Value="/Images/Monitor-Selected.png" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsFolderSelected), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="False" />
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="Root" />
                                                        </MultiDataTrigger.Conditions>

                                                        <Setter Property="Source"
                                                                TargetName="img"
                                                                Value="/Images/Monitor.png" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsFolderSelected), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="Partial" />
                                                            <Condition Binding="{Binding (Model:TreeViewItemProps.IsRootLevel), RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="Root" />
                                                        </MultiDataTrigger.Conditions>

                                                        <Setter Property="Source"
                                                                TargetName="img"
                                                                Value="/Images/Monitor-Partial.png" />
                                                    </MultiDataTrigger>


                                                </DataTemplate.Triggers>
    										</DataTemplate>
    									</Setter.Value>
    								</Setter>

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition MinWidth="19"
                                              Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <ToggleButton x:Name="Expander"
                                                                  ClickMode="Press"
                                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                                  Style="{StaticResource ExpandCollapseToggleStyle}" />
                                                    <Border x:Name="Bd"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}"
                                                        CornerRadius="5"
                                                    Grid.Column="1"
                                                        Padding="{TemplateBinding Padding}"
                                                        SnapsToDevicePixels="true">
                                                    <ContentPresenter x:Name="PART_Header"
                                                          ContentSource="Header"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                    <ItemsPresenter x:Name="ItemsHost"
                                                Grid.ColumnSpan="2"
                                                Grid.Column="1"
                                                Grid.Row="1" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsExpanded" Value="false">
                                                        <Setter Property="Visibility" 
                                                                TargetName="ItemsHost"
                                                                Value="Collapsed" />
                                                    </Trigger>
                                                    <Trigger Property="HasItems" Value="false">
                                                        <Setter Property="Visibility"
                                                                TargetName="Expander"
                                                                Value="Hidden" />
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="true">
                                                        <Setter Property="Background" 
                                                                TargetName="Bd" >
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                    <GradientStop Color="#FFF3D264" Offset="0"/>
                                                                    <GradientStop Color="#FFF3D264" Offset="1"/>
                                                                    <GradientStop Color="#FFF7F7F5" Offset="0.179"/>
                                                                    <GradientStop Color="#FFF4DC8C" Offset="0.562"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Foreground"
                                                                Value="Black" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                                Value="false">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                </Style>
                                
                            </TreeView.Resources>
    					</TreeView>
    				</Border>
    				<TextBlock x:Name="tbTitle" HorizontalAlignment="Left" Height="77" Margin="16,12,0,0" TextWrapping="Wrap" Text="SELECT SEARCH LOCATION FOR LOST TRACKS." VerticalAlignment="Top" Width="391" FontSize="18.667" Foreground="#FFD4CD7D" FontFamily="/TuneNazity;component/Fonts/#Segoe UI Semibold" ToolTip=""/>
    				<Image x:Name="imgClose" HorizontalAlignment="Left" Height="84" Margin="412,12,0,0" VerticalAlignment="Top" Width="77" RenderTransformOrigin="0.5,0.5" ToolTip="" Source="/TuneNazity;component/Images/Search_256x256.png">
    					<Image.RenderTransform>
    						<TransformGroup>
    							<ScaleTransform ScaleY="1" ScaleX="1"/>
    							<SkewTransform AngleY="0" AngleX="0"/>
    							<RotateTransform Angle="0"/>
    							<TranslateTransform/>
    						</TransformGroup>
    					</Image.RenderTransform>
    				</Image>
    				<Button x:Name="Select" Content="Select" Style="{DynamicResource Button_Theme}" Margin="95,375,0,0" FontSize="14.667" FontFamily="Arial" HorizontalAlignment="Left" Width="128" Height="36.423" VerticalAlignment="Top">
    					<i:Interaction.Triggers>
    						<i:EventTrigger EventName="Click">
    							<Command:EventToCommand Command="{Binding Main.SetSearchParameters, Mode=OneWay}"/>
    						</i:EventTrigger>
    					</i:Interaction.Triggers>
    				</Button>
    				<Button x:Name="Exit" Content="Exit" Style="{DynamicResource Button_Theme}" Margin="268,375,0,0" FontSize="14.667" FontFamily="Arial" HorizontalAlignment="Left" Width="128" Height="36.423" VerticalAlignment="Top">
    					<i:Interaction.Triggers>
    						<i:EventTrigger EventName="Click">
    							<Command:EventToCommand Command="{Binding Main.CancelSearchWindow, Mode=OneWay}"/>
    						</i:EventTrigger>
    					</i:Interaction.Triggers>
    				</Button>
    				<Border x:Name="SelectionBorder" HorizontalAlignment="Left" Margin="10,325,0,0" Width="479" Background="{DynamicResource DarkerBackGround}" CornerRadius="5" VerticalAlignment="Top" >
    					<i:Interaction.Triggers>
    						<i:EventTrigger EventName="SizeChanged">
                                <Command:EventToCommand Command="{Binding Main.UpdateControlLayout, Mode=OneWay}"
                                 CommandParameter="{Binding Name, ElementName=SelectionBorder}"                        
                                />
                            </i:EventTrigger>
    					</i:Interaction.Triggers>
    					<TextBox x:Name="SearchSelection" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Width="479" Background="{x:Null}" Foreground="#FF21F034" FontSize="18.667" FontFamily="/TuneNazity;component/Fonts/#Segoe UI Semibold" MaxHeight="80" VerticalScrollBarVisibility="Auto" TextOptions.TextFormattingMode="Display" Text="{Binding Main.SearchCriteria}"/>
    				</Border>
    			</Grid>
    		</Border>
    	</Border>
    </Grid>
</Window>